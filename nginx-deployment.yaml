apiVersion: apps/v1
kind: Deployment
metadata:
  name: nginx-deployment
spec:
  replicas: 1
  selector:
    matchLabels:
      app: nginx
  template:
    metadata:
      labels:
        app: nginx
    spec:
      nodeSelector:
        eks.amazonaws.com/nodegroup: k8s-3tier-node1
      containers:
        - name: nginx-container
          image: nginx:latest
          ports:
            - containerPort: 80  # 컨테이너 내부에서 사용되는 포트
          volumeMounts:
            - name: nginx-config-volume
              mountPath: /etc/nginx/conf.d  # NGINX 설정 파일 경로
      volumes:
        - name: nginx-config-volume
          configMap:
            name: nginx-config  # NGINX 설정을 담은 ConfigMap 참조

---

apiVersion: v1
kind: ConfigMap
metadata:
  name: nginx-config
data:
  default.conf: |
    upstream tomcat_backend {
      ip_hash;  # 클라이언트 IP 기반 세션 고정
      server tomcat-service.argocd.svc.cluster.local:8888;
    }

    server {
      listen 80;  # 클라이언트가 접근할 포트

      location / {
        proxy_pass http://tomcat_backend;

        # 캐시 비활성화 설정
        add_header Cache-Control "no-cache, no-store, must-revalidate";
        add_header Pragma "no-cache";
        add_header Expires 0;

        # 원래 요청의 호스트명과 포트를 전달
        proxy_set_header Host $host;
        proxy_set_header X-Forwarded-Host $host;

        # 포트 명확히 설정
        proxy_set_header X-Forwarded-Port $server_port;

        # 스키마(프로토콜) 전달 (http/https)
        proxy_set_header X-Forwarded-Proto $scheme;

        # 클라이언트 IP 주소 전달
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;

        # 기본 설정 추가
        proxy_set_header X-Forwarded-Server $host;
      }
    }
